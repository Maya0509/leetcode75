public class TecentTest {
    /*
    小红拿到了一个数组，她准备将数组分割成 k 段，使得每段内部做按位异或后，再全部求和。小红希望最终这个和尽可能大，你能帮帮她吗？

输入描述
输入包含两行。
第一行两个正整数 n, k , (1\leq k \leq n \leq 400)，分别表示数组的长度和要分的段数。
第二行 n 个整数 a_i (0 \leq a_i \leq 10^9)，表示数组 a 的元素。

输出描述
输出一个正整数，表示最终的最大和。

示例 1
收起

输入
复制
6 2
1 1 1 2 3 4
输出
复制
10
说明
小红将数组分为了：
[1, 4] 和 [5, 6] 这两个区间，得分分别为：1 \oplus 1 \oplus 1 \oplus 2 = 3 和 3 \oplus 4 = 7。总得分为 3+7=10。
可以证明不存在比 10 更优的分割方案。
注：\oplus 符号表示异或操作。

示例 2
收起

输入
复制
5 3
1 0 1 1 0
输出
复制
3
示例 3
收起

输入
复制
3 3
1 1 2
输出
复制
4
     */

    /*
    小红拿到了一个字符矩阵，她可以从任意一个地方出发，希望走 6 步后恰好形成"tencent"字符串。小红想知道，共有多少种不同的行走方案？
注：每一步可以选择上、下、左、右中任意一个方向进行行走。不可行走到矩阵外部。

输入描述
第一行输入两个正整数n,m，代表矩阵的行数和列数。
接下来的n行，每行输入一个长度为m的、仅由小写字母组成的字符串，代表小红拿到的矩阵。

1\leq n,m \leq 1000

输出描述
一个整数，代表最终合法的方案数。

示例 1
收起

输入
复制
3 3
ten
nec
ten
输出
复制
4
说明
第一个方案，从左上角出发，右右下左左上。
第二个方案，从左上角出发，右右下左左下。
第三个方案，从左下角出发，右右上左左下。
第四个方案，从左上角出发，右右上左左上。
     */
}
